// <auto-generated />
using System;
using DigitalSales.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DigitalSales.Data.Migrations
{
    [DbContext(typeof(DbContextDigitalSales))]
    partial class DbContextDigitalSalesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DigitalSales.Entities.Sales.Person", b =>
                {
                    b.Property<int>("IdPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Num_document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_person")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPerson");

                    b.ToTable("person");
                });

            modelBuilder.Entity("DigitalSales.Entities.Users.Role", b =>
                {
                    b.Property<int>("idRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Condition")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRole");

                    b.ToTable("role");
                });

            modelBuilder.Entity("DigitalSales.Entities.Users.User", b =>
                {
                    b.Property<int>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Condition")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Num_Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password_Hash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Password_Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idRole")
                        .HasColumnType("int");

                    b.HasKey("idUser");

                    b.HasIndex("idRole");

                    b.ToTable("users");
                });

            modelBuilder.Entity("DigitalSales.Entities.Warehouse.Article", b =>
                {
                    b.Property<int>("IdArticle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Condition")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Price_Sale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("idCategory")
                        .HasColumnType("int");

                    b.HasKey("IdArticle");

                    b.HasIndex("idCategory");

                    b.ToTable("article");
                });

            modelBuilder.Entity("DigitalSales.Entities.Warehouse.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Condition")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdCategory");

                    b.ToTable("category");
                });

            modelBuilder.Entity("DigitalSales.Entities.Warehouse.DetailEntry", b =>
                {
                    b.Property<int>("iddetail_entry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("idarticle")
                        .HasColumnType("int");

                    b.Property<int>("identry")
                        .HasColumnType("int");

                    b.HasKey("iddetail_entry");

                    b.HasIndex("identry");

                    b.ToTable("detail_entry");
                });

            modelBuilder.Entity("DigitalSales.Entities.Warehouse.Entry", b =>
                {
                    b.Property<int>("identry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date_time")
                        .HasColumnType("datetime2");

                    b.Property<int>("idprovider")
                        .HasColumnType("int");

                    b.Property<int>("iduser")
                        .HasColumnType("int");

                    b.Property<string>("num_voucher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("type_voucher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("identry");

                    b.HasIndex("idprovider");

                    b.HasIndex("iduser");

                    b.ToTable("entry");
                });

            modelBuilder.Entity("DigitalSales.Entities.Users.User", b =>
                {
                    b.HasOne("DigitalSales.Entities.Users.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("idRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalSales.Entities.Warehouse.Article", b =>
                {
                    b.HasOne("DigitalSales.Entities.Warehouse.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("idCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalSales.Entities.Warehouse.DetailEntry", b =>
                {
                    b.HasOne("DigitalSales.Entities.Warehouse.Entry", "Entry")
                        .WithMany("detail_entry")
                        .HasForeignKey("identry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalSales.Entities.Warehouse.Entry", b =>
                {
                    b.HasOne("DigitalSales.Entities.Sales.Person", "Person")
                        .WithMany("Entries")
                        .HasForeignKey("idprovider")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigitalSales.Entities.Users.User", "User")
                        .WithMany("Entries")
                        .HasForeignKey("iduser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
